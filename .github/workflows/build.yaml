name: "Build"
run-name: "Build"
on:
  workflow_dispatch:
  release:
    types: [published]
  pull_request:
    types: [opened, synchronize, reopened]
  
jobs:
  build-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.user.login != 'team-modern-deployments-bot'}}
    permissions: # https://github.com/dorny/test-reporter/issues/168
      statuses: write
      checks: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Check for significant changes
        id: changed-files-specific
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: |
            .release-please-manifest.json
            release-please-config.json
            .github/**
            **.md
      - name: Set short git commit SHA
        id: commit_sha
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "SHORT_SHA=$calculatedSha" >> $GITHUB_OUTPUT
      - name: Determine version
        id: version
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | tr '/' '-' | tr '_' '-')
          CURRENT_VERSION=$(git describe --tags --abbrev=0 || echo "0.0.0")
          VERSION="${CURRENT_VERSION}-${BRANCH_NAME}-${{ steps.commit_sha.outputs.SHORT_SHA }}"
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Build csharp sdk debug
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: dotnet pack csharp/Octopus/Octopus.Kubernetes.Monitor.MessageContracts --configuration Debug /p:Version=${{ steps.version.outputs.VERSION }} --output .
      - name: Publish to feedz
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: dotnet nuget push Octopus.Kubernetes.Monitor.MessageContracts.${{ steps.version.outputs.VERSION }}.nupkg --source https://f.feedz.io/octopus-deploy/dependencies/nuget/index.json --api-key ${{secrets.FEEDZ_API_KEY}}

  build-release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' && startsWith(github.event.release.tag_name, 'csharp-sdk')}}
    permissions: # https://github.com/dorny/test-reporter/issues/168
      statuses: write
      checks: write
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: Determine version
        id: version
        run: |
          echo "VERSION=$(echo "${{ github.event.release.tag_name }}" | sed 's/^csharp-sdk-v//')" >> $GITHUB_OUTPUT
      - name: Build csharp sdk release
        run: dotnet pack csharp/Octopus/Octopus.Kubernetes.Monitor.MessageContracts --configuration Release /p:Version=${{ steps.version.outputs.VERSION }} --output . 
      - name: Publish to feedz
        run: dotnet nuget push Octopus.Kubernetes.Monitor.MessageContracts.${{ steps.version.outputs.VERSION }}.nupkg --source https://f.feedz.io/octopus-deploy/dependencies/nuget/index.json --api-key ${{secrets.FEEDZ_API_KEY}}
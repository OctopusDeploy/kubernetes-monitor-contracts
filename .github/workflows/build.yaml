name: "Build"
run-name: "Build"
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
  BRANCH_VERSION: ${{ github.head_ref || github.ref }}
  OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }}
  OCTOVERSION_Patch: ${{ github.run_number }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: # https://github.com/dorny/test-reporter/issues/168
      statuses: write
      checks: write
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - name: Determine PR version
        if: github.event_name == 'pull_request'
        id: new_version
        run: |
          BRANCH_NAME=$(echo ${{ github.head_ref }} | tr '/' '-' | tr '_' '-')
          CURRENT_VERSION=$(git describe --tags --abbrev=0 || echo "0.0.0")
          VERSION="${CURRENT_VERSION}-${BRANCH_NAME}-${{ env.SHORT_SHA }}"
          echo "version=${VERSION}" >> "$GITHUB_ENV"

      - name: Determine release version
        if: github.event_name == 'release'
        id: release_version
        run: |
          echo "version=${{ github.event.release.tag_name }}" >> "$GITHUB_ENV"

      - name: Build csharp sdk
        run: dotnet pack --configuration Release /p:Version=${VERSION} --output .

      - uses: actions/upload-artifact@v4
        name: Upload csharp sdk
        with:
          path: Octopus.Kubernetes.Monitor.MessageContracts.${VERSION}

